---
- name: Check if Kubernetes cluster is ready
  ansible.builtin.shell: kubectl get nodes {{ ansible_hostname }} --no-headers
  delegate_to: localhost
  register: k8s_node_status
  failed_when: k8s_node_status.rc != 0
  changed_when: false

- name: Add Cilium Helm repository
  kubernetes.core.helm_repository:
    name: cilium
    repo_url: https://helm.cilium.io/
  delegate_to: localhost

- name: Check for differences using helm-diff
  ansible.builtin.shell: >
    helm diff upgrade cilium cilium/cilium
    --version {{ cilium_version }}
    --namespace kube-system
    --values {{ role_path }}/files/cilium-helm-values.yaml
  delegate_to: localhost
  register: helm_diff_check
  failed_when: false # This is crucial. We expect a non-zero exit code if there's a diff.

- name: Install/Upgrade Cilium CNI
  kubernetes.core.helm:
    chart_ref: cilium/cilium
    chart_version: "{{ cilium_version }}"
    create_namespace: false
    release_name: cilium
    release_namespace: kube-system
    release_state: present
    values_files:
      - "{{ role_path }}/files/cilium-helm-values.yaml"
    update_repo_cache: true
    wait: true
  delegate_to: localhost
  when: "helm_diff_check.rc != 0"
  register: cilium_install_result

- name: Display Helm output
  ansible.builtin.debug:
    var: cilium_install_result
  when: cilium_install_result is defined

- name: Display Cilium installation result
  ansible.builtin.debug:
    msg: |
      Cilium {{ 'installed' if cilium_release.status is not defined else 'upgraded' }} successfully
      Chart: {{ cilium_install_result.chart | default('cilium/cilium') }}
      Version: {{ cilium_version }}
      Changed: {{ cilium_install_result.changed }}

- name: Wait for Cilium pods to be ready
  ansible.builtin.shell: kubectl get pods -n kube-system -l k8s-app=cilium --no-headers | grep -v Running || true
  delegate_to: localhost
  register: cilium_pods_check
  until: cilium_pods_check.stdout == ""
  retries: 18
  delay: 10
  changed_when: false

- name: Confirm node is ready with CNI
  ansible.builtin.shell: kubectl get nodes {{ ansible_hostname }} --no-headers | awk '{print $2}'
  delegate_to: localhost
  register: node_ready_status
  failed_when: node_ready_status.stdout != "Ready"
  changed_when: false
