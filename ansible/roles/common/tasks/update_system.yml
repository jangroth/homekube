---
- name: Add Kubernetes apt repository key
  apt_key:
    url: https://pkgs.k8s.io/core:/stable:/v{{ kubernetes_version }}/deb/Release.key
    state: present
    keyring: /etc/apt/keyrings/kubernetes-apt-keyring.gpg

- name: Add Kubernetes apt repository
  apt_repository:
    repo: "deb [signed-by=/etc/apt/keyrings/kubernetes-apt-keyring.gpg] https://pkgs.k8s.io/core:/stable:/v{{ kubernetes_version }}/deb/ /"
    state: present
    filename: kubernetes
    update_cache: yes

- name: Update apt packages
  apt:
    update_cache: yes
    upgrade: dist
    cache_valid_time: 3600
    autoclean: yes
    autoremove: yes

- name: Check if a reboot is needed
  register: reboot_required_file
  stat:
    path: /var/run/reboot-required

- name: Reboot if needed
  reboot:
    msg: "Reboot initiated by Ansible for kernel updates"
    connect_timeout: 5
    reboot_timeout: 300
    pre_reboot_delay: 0
    post_reboot_delay: 30
    test_command: uptime
  when: reboot_required_file.stat.exists

- name: Install common packages
  apt:
    name:
      - apt-transport-https
      - ca-certificates
      - curl
      - dnsutils
      - figlet
      - git
      - gpg
      - htop
      - jq
      - kubectx
      - net-tools
      - netcat-openbsd
      - nmap
      - traceroute
      - tree
      - vim
      - yq
    state: present

- name: Remove /etc/motd
  file:
    path: /etc/motd
    state: absent

- name: Configure motd
  copy:
    src: system/motd-hostname
    dest: /etc/update-motd.d/20-hostname
    owner: root
    group: root
    mode: "0755"

- name: Configure motd
  copy:
    src: system/motd-updates
    dest: /etc/update-motd.d/20-updates
    owner: root
    group: root
    mode: "0755"

- name: Copy .bashrc for root
  copy:
    src: system/bashrc
    dest: /root/.bashrc
    owner: root
    group: root
    mode: "0644"

- name: Copy .bash_aliases for root
  copy:
    src: system/bash_aliases
    dest: "/root/.bash_aliases"
    owner: root
    group: root
    mode: "0644"

- name: Copy .bashrc for user
  copy:
    src: system/bashrc
    dest: "/home/{{ ssh_username }}/.bashrc"
    owner: "{{ ssh_username }}"
    group: "{{ ssh_username }}"
    mode: "0644"

- name: Copy .bash_aliases for user
  copy:
    src: system/bash_aliases
    dest: "/home/{{ ssh_username }}/.bash_aliases"
    owner: "{{ ssh_username }}"
    group: "{{ ssh_username }}"
    mode: "0644"
