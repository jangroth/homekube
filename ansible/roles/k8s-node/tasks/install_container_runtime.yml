---
#
# basic CNI
#
- name: runc, cni-plugins
  apt:
    pkg:
      - runc
      - containernetworking-plugins

- name: Create CNI configuration directory
  file:
    path: /etc/cni/net.d
    state: directory
    mode: "0755"

#
# Container runtime (containerd)
#
- name: Check installed containerd version
  command: /usr/local/bin/containerd --version
  register: installed_containerd_version_raw
  failed_when: false
  changed_when: false

- name: Parse installed containerd version
  set_fact:
    installed_containerd_version: "{{ installed_containerd_version_raw.stdout.split(' ')[2] | regex_replace('^v', '') | default('none') }}"
  when: installed_containerd_version_raw.rc == 0

- name: Set installed version to none if containerd not found
  set_fact:
    installed_containerd_version: "none"
  when: installed_containerd_version_raw.rc != 0

- name: Display the extracted version number
  ansible.builtin.debug:
    var: installed_containerd_version

# Only proceed with containerd installation/update if version differs
- block:
    - name: Check if containerd already downloaded
      stat:
        path: "{{ playbook_dir }}/../downloads/containerd-{{ containerd_version }}.tar.gz"
      register: containerd_archive
      run_once: true
      delegate_to: localhost
      become: false

    - name: Download containerd
      get_url:
        url: "https://github.com/containerd/containerd/releases/download/v{{ containerd_version }}/containerd-{{ containerd_version }}-{{ system_arch }}.tar.gz"
        dest: "{{ playbook_dir }}/../downloads/containerd-{{ containerd_version }}.tar.gz"
        mode: "0644"
      run_once: true
      delegate_to: localhost
      become: false
      when: not containerd_archive.stat.exists

    - name: Copy containerd to remote hosts
      copy:
        src: "{{ playbook_dir }}/../downloads/containerd-{{ containerd_version }}.tar.gz"
        dest: "/tmp/containerd-{{ containerd_version }}.tar.gz"
        mode: "0644"

    - name: Extract containerd
      unarchive:
        src: "/tmp/containerd-{{ containerd_version }}.tar.gz"
        dest: /usr/local
        remote_src: yes

  when: installed_containerd_version != containerd_version

- name: Create containerd directory
  file:
    path: /etc/containerd/
    state: directory
    mode: "0755"

- name: Copy containerd configuration
  copy:
    src: containerd/config.toml
    dest: /etc/containerd/config.toml
    backup: no
    owner: root
    group: root
    mode: "0644"

- name: Copy containerd systemd service
  copy:
    src: containerd/containerd.service
    dest: /etc/systemd/system/containerd.service
    backup: no
    owner: root
    group: root
    mode: "0644"

- name: Reload systemd
  systemd:
    daemon_reload: yes

- name: Restart containerd if binary was updated
  systemd:
    name: containerd
    state: restarted
  when: installed_containerd_version != containerd_version

- name: Enable and start containerd
  systemd:
    name: containerd
    enabled: yes
    state: started
