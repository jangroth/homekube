---
- name: Set connection variables for initial setup
  set_fact:
    ansible_user: boot
    # ansible_user: homekube
    ansible_ssh_pass: boot
  no_log: true

- name: Create user
  user:
    name: "{{ ssh_username }}"
    shell: /bin/bash
    create_home: yes
    state: present
    password_lock: yes

- name: Add user to sudo group
  user:
    name: "{{ ssh_username }}"
    groups: sudo
    append: yes

- name: Ensure user .ssh directory exists
  file:
    path: "/home/{{ ssh_username }}/.ssh"
    state: directory
    mode: "0700"
    owner: "{{ ssh_username }}"
    group: "{{ ssh_username }}"

- name: Check if SSH key already exists
  stat:
    path: "/home/{{ ssh_username }}/.ssh/id_ed25519.pub"
  register: ssh_key_file

- name: Generate SSH key pair for node
  openssh_keypair:
    path: "/home/{{ ssh_username }}/.ssh/id_ed25519"
    type: ed25519
    size: 4096
    state: present
    owner: "{{ ssh_username }}"
    group: "{{ ssh_username }}"
    mode: "0600"
  when: not ssh_key_file.stat.exists

- name: Set correct permissions for public key
  file:
    path: "/home/{{ ssh_username }}/.ssh/id_ed25519.pub"
    state: file
    owner: "{{ ssh_username }}"
    group: "{{ ssh_username }}"
    mode: "0644"
  when: not ssh_key_file.stat.exists

- name: Update hostname in public key on the host
  shell: sed -i "s/$(cat /home/{{ ssh_username }}/.ssh/id_ed25519.pub | cut -d' ' -f3)$/{{ inventory_hostname }}@homekube/" /home/{{ ssh_username }}/.ssh/id_ed25519.pub
  when: not ssh_key_file.stat.exists

- name: Copy node's public SSH key to control node
  fetch:
    src: "/home/{{ ssh_username }}/.ssh/id_ed25519.pub"
    dest: "{{ role_path }}/files/pub_keys/{{ inventory_hostname }}.pub"
    flat: yes
  # become_user: "{{ ssh_username }}"

- name: Add other node's public keys to authorized_keys
  authorized_key:
    user: homekube
    key: "{{ lookup('file', item) }}"
    state: present
  with_fileglob:
    - "{{ role_path }}/files/pub_keys/*.pub"

- name: Configure sudoers for homekube user
  lineinfile:
    path: "/etc/sudoers.d/{{ ssh_username }}"
    line: "{{ ssh_username }} ALL=(ALL) NOPASSWD: ALL"
    state: present
    mode: "0440"
    create: yes
    validate: "visudo -cf %s"

- name: Disable root login
  lineinfile:
    path: /etc/ssh/sshd_config
    regexp: "^#?PermitRootLogin"
    line: "PermitRootLogin no"
    state: present
  notify: Restart sshd
