---
- name: Check if Kubernetes cluster is ready
  ansible.builtin.shell: kubectl get nodes {{ ansible_hostname }} --no-headers
  register: k8s_node_status
  failed_when: k8s_node_status.rc != 0
  changed_when: false
  delegate_to: localhost

- name: Add ArgoCD Helm repository
  kubernetes.core.helm_repository:
    name: argo
    repo_url: "https://argoproj.github.io/argo-helm"
  delegate_to: localhost

- name: Check if ArgoCD is already installed
  kubernetes.core.helm_info:
    name: argocd
    release_namespace: argocd
  delegate_to: localhost
  register: argocd_release
  failed_when: false

- name: Install/Upgrade ArgoCD
  kubernetes.core.helm:
    chart_ref: argo/argo-cd
    chart_version: "{{ argocd_version }}"
    create_namespace: true
    release_name: argocd
    release_namespace: argocd
    release_state: present
    values_files:
      - "{{ role_path }}/files/argocd-helm-values.yaml"
    update_repo_cache: true
    wait: true
  delegate_to: localhost
  register: argocd_install_result

- name: Display ArgoCD installation result
  ansible.builtin.debug:
    msg: |
      ArgoCD {{ 'installed' if argocd_release.status is not defined else 'upgraded' }} successfully
      Chart: {{ argocd_install_result.chart | default('argo/argo-cd') }}
      Version: {{ argocd_version }}
      Changed: {{ argocd_install_result.changed }}

- name: Wait for ArgoCD server to be ready
  kubernetes.core.k8s_info:
    api_version: apps/v1
    kind: Deployment
    name: argocd-server
    namespace: argocd
    wait: true
    wait_condition:
      type: Available
      status: "True"
  delegate_to: localhost

- name: Create ArgoCD root application
  kubernetes.core.k8s:
    state: present
    definition:
      apiVersion: argoproj.io/v1alpha1
      kind: Application
      metadata:
        name: root-app
        namespace: argocd
        finalizers:
          - resources-finalizer.argocd.argoproj.io
        labels:
          app.kubernetes.io/managed-by: "ansible"
          app.kubernetes.io/part-of: "argocd"
        annotations:
          ansible.org/managed-by: "ansible"
          ansible.org/version: "{{ ansible_version.full }}"
      spec:
        project: default
        source:
          repoURL: "{{ argocd_root_app_repo_url }}"
          path: "{{ argocd_root_app_path }}"
          targetRevision: "{{ argocd_root_app_target_revision }}"
        destination:
          server: https://kubernetes.default.svc
          namespace: argocd
        syncPolicy:
          automated:
            prune: true
            selfHeal: true
  delegate_to: localhost

- name: Display ArgoCD admin password retrieval command
  debug:
    msg: |
      ArgoCD has been successfully installed!

      To get the admin password, run:
      kubectl -n argocd get secret argocd-initial-admin-secret -o jsonpath="{.data.password}" | base64 -d

      To access ArgoCD UI, you can port-forward:
      kubectl port-forward svc/argocd-server -n argocd 8080:443

      Then access: http://localhost:8080
      Username: admin
  tags: always
