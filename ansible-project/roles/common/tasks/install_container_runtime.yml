---
#
# Networking and kernel modules
#

# possibly not required for >=1.30
- name: Copy kernel modules configuration
  copy:
    src: modules-load/k8s.conf
    dest: /etc/modules-load.d/k8s.conf
    backup: no
    owner: root
    group: root
    mode: "0644"

- name: modprobe overlay
  command: modprobe overlay

- name: modprobe br_netfilter
  command: modprobe br_netfilter

- name: Copy sysctl configuration
  copy:
    src: sysctl/k8s.conf
    dest: /etc/sysctl.d/k8s.conf
    backup: no
    owner: root
    group: root
    mode: "0644"

- name: sysctl --system
  command: sysctl --system

#
# basic CNI
#
- name: runc, cni-plugins
  apt:
    pkg:
      - runc
      - containernetworking-plugins

- name: Create CNI configuration directory
  file:
    path: /etc/cni/net.d
    state: directory
    mode: "0755"

- name: Copy cni configurations
  copy:
    src: "cni/{{ item.file }}"
    dest: "/etc/cni/net.d/{{ item.file }}"
    backup: no
    owner: root
    group: root
    mode: "0644"
  loop:
    - { file: "99-loopback.conf" }

- name: Copy cni brige configuration
  template:
    src: 10-bridge.conf.j2
    dest: "/etc/cni/net.d/10-bridge.conf"
    owner: root
    group: root
    mode: "0644"

#
# Container runtime
#

- name: Check if containerd already downloaded
  stat:
    path: "{{ playbook_dir }}/../downloads/containerd-{{ containerd_version }}.tar.gz"
  register: containerd_archive
  run_once: true
  delegate_to: localhost
  become: false

- name: Download containerd
  get_url:
    url: "https://github.com/containerd/containerd/releases/download/v{{ containerd_version }}/containerd-{{ containerd_version }}-{{ system_arch }}.tar.gz"
    dest: "{{ playbook_dir }}/../downloads/containerd-{{ containerd_version }}.tar.gz"
    mode: "0644"
  run_once: true
  delegate_to: localhost
  become: false
  when: not containerd_archive.stat.exists

- name: Copy containerd to remote hosts
  copy:
    src: "{{ playbook_dir }}/../downloads/containerd-{{ containerd_version }}.tar.gz"
    dest: "/tmp/containerd-{{ containerd_version }}.tar.gz"
    mode: "0644"

- name: Extract containerd
  unarchive:
    src: "/tmp/containerd-{{ containerd_version }}.tar.gz"
    dest: /usr/local
    remote_src: yes
    creates: /usr/local/bin/containerd

- name: Create containerd directory
  file:
    path: /etc/containerd/
    state: directory
    mode: "0755"

- name: Copy containerd configuration
  copy:
    src: containerd/config.toml
    dest: /etc/containerd/config.toml
    backup: no
    owner: root
    group: root
    mode: "0644"

- name: Copy containerd systemd service
  copy:
    src: containerd/containerd.service
    dest: /etc/systemd/system/containerd.service
    backup: no
    owner: root
    group: root
    mode: "0644"

- name: Reload systemd
  systemd:
    daemon_reload: yes

- name: Enable and start containerd
  systemd:
    name: containerd
    enabled: yes
    state: started
